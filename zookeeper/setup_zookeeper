#!/bin/bash
###################################################
#
#  Name: setup_zookeeper
#  Purpose: Initial zookeeper setup
#  Author: Shane Kumpf
#
###################################################

#
# Base variables
#
SCRIPT_NAME=`basename $0`
SCRIPT_DIR=`cd $(dirname $0) && pwd`

#
# Functions
#
function usage
{
    echo "Usage: $SCRIPT_NAME -n <node name> -e \"<zookeeper1> [<zookeeper2>...]\""
    exit 1
}

#
# Validation
#
if [ `id -un` != "ec2-user" ]; then
    echo "ERROR: Must run as ec2-user"
    exit 1
fi

#
# Parse command line args
#
while getopts "n:e:" opt; do
    case $opt in
        n) 
            node=$OPTARG;;
        e)
            ensemble="$OPTARG";;
        \?) 
            echo "Invalid option: -$OPTARG"; usage;;
    esac
done

if [ -z "$node" ]; then
    usage
fi

if [ -z "$ensemble" ]; then
    usage
fi

#
# Variables
#
work_dir="/tmp/work"
git_ec2oop_url="https://github.com/sakserv/ec2oop.git"
git_ec2_tools_url=" https://github.com/sakserv/ec2-tools"
helpers_dir="$work_dir/ec2oop/helpers"
common_dir="$work_dir/ec2oop/common"
core_conf_dir="$helpers_dir/configuration_files/core_hadoop"
zk_conf_dir="$helpers_dir/configuration_files/zookeeper"
zoo_cfg="$zk_conf_dir/zoo.cfg"
pkg_list="zookeeper openssl"

#
# Prep work dir
#
if [ -d "$work_dir" ]; then
    echo -e "\n#####  Cleaning up previous work directory $work_dir"
    rm -rf $work_dir || exit 1
    echo "SUCCESS"
fi

# Create new work dir
if [ ! -d "$work_dir" ]; then
    echo -e "\n#####  Creating work directory $work_dir"
    mkdir -p $work_dir || exit 1
    echo "SUCCESS"
fi

# git clone ec2-tools into work dir
echo -e "\n#####  Cloning ec2-tools repo"
(cd $work_dir && git clone $git_ec2_tools_url) || exit 1
echo "SUCCESS"

# git clone ec2oop into work dir
echo -e "\n#####  Pulling repo $git_ec2oop_url to $work_dir"
(cd $work_dir && git clone $git_ec2oop_url) || exit 1
echo "SUCCESS"

#
# Source helpers
#
source $helpers_dir/scripts/usersAndGroups.sh
source $helpers_dir/scripts/directories.sh
dirs_to_create="$ZOOKEEPER_LOG_DIR $ZOOKEEPER_PID_DIR $ZOOKEEPER_DATA_DIR $HADOOP_CONF_DIR"
dirs_user="$ZOOKEEPER_USER"
dirs_group="$HADOOP_GROUP"

#
# Main
#
echo -e "\nStarting $SCRIPT_NAME at `date`"

# Add yum repos
echo -e "\n#####  Adding yum repos"
ec2-ssh $node "$common_dir/add_yum_repos" || exit 1
echo "SUCCESS"

# Install java
echo -e "\n#####  Installing Java"
ec2-ssh $node "$common_dir/install_java" || exit 1
echo "SUCCESS"

# Install Hadoop packages
for pkg in $pkg_list; do
    echo -e "\n#####  Installing $pkg on $node"
    ec2-ssh $node "sudo yum install -y $pkg" || exit 1
    echo "SUCCESS"
done

# Create needed directories
for dir_name in $dirs_to_create; do
    echo -e "\n#####  Creating directory $dir_name on $node"
    ec2-ssh $node "sudo mkdir -p $dir_name" || exit 1
    ec2-ssh $node "sudo chown -R $dirs_user:$dirs_group $dir_name" || exit 1
    ec2-ssh $node "sudo chmod -R 755 $dir_name" || exit 1
    echo "$dir_name contents:"
    ec2-ssh $node "find $dir_name -ls"
    echo "SUCCESS"
done

# Copy core hadoop config to $HADOOP_CONF_DIR
echo -e "\n#####  Copying core hadoop config from $core_conf_dir to $HADOOP_CONF_DIR"
ec2-ssh $node "sudo cp -Rp $core_conf_dir/* $HADOOP_CONF_DIR/" || exit 1
ec2-ssh $node "sudo chown -R $dirs_user:$dirs_group $HADOOP_CONF_DIR/" || exit 1
ec2-ssh $node "sudo chmod -R 755 $HADOOP_CONF_DIR/" || exit 1
echo "$HADOOP_CONF_DIR contents:"
ec2-ssh $node "find $HADOOP_CONF_DIR/ -ls"
echo "SUCCESS"

# Setup the zookeeper config
count=1
for zk in $ensemble; do 
    echo -e "\n#####  Setting server.$count to $zk in $zoo_cfg"
    ec2-ssh $node "sudo sed -i 's|.*server\.'$count'.*|server.'$count'='$zk':2888:3888|g' $zoo_cfg" || exit 1
    count=$(( count + 1 ))
done
echo "$zoo_cfg contents on $node:"
ec2-ssh $node "cat $zoo_cfg"
echo "SUCCESS"

# Set the data directory in the config
echo -e "\n#####  Setting zookeeper data directory to: $ZOOKEEPER_DATA_DIR"
ec2-ssh $node "sudo sed -i 's|.*dataDir.*|dataDir='$ZOOKEEPER_DATA_DIR'|g' $zoo_cfg" || exit 1
echo "$zoo_cfg contents on $node:"
ec2-ssh $node "cat $zoo_cfg"
echo "SUCCESS"

# Lay down zookeeper config
echo -e "\n#####  Installing zookeeeper config to: $ZOOKEEPER_CONF_DIR"
if ec2-ssh $node "test -d $ZOOKEEPER_CONF_DIR"; then
    echo "Removing $ZOOKEEPER_CONF_DIR"
    ec2-ssh $node "sudo rm -rf $ZOOKEEPER_CONF_DIR" || exit 1
fi
# make the new conf dir and copy over the configs
ec2-ssh $node "sudo mkdir -p $ZOOKEEPER_CONF_DIR" || exit 1
ec2-ssh $node "sudo cp $zk_conf_dir/* $ZOOKEEPER_CONF_DIR/" || exit 1
echo "$ZOOKEEPER_CONF_DIR contents:"
ec2-ssh $node "sudo find $ZOOKEEPER_CONF_DIR -ls"

echo -e "\nFinished $SCRIPT_NAME at `date`"
exit 0
