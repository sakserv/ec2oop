#!/bin/bash
###################################################
#
#  Name: init_zk
#  Purpose: Initial zookeeper setup
#  Author: Shane Kumpf
#
###################################################

#
# Base variables
#
SCRIPT_NAME=`basename $0`
SCRIPT_DIR=`cd $(dirname $0) && pwd`

#
# Functions
#
function usage
{
    echo "Usage: $SCRIPT_NAME -z \"<zookeeper1> [<zookeeper2>...]\""
    exit 1
}

#
# Validation
#
if [ `id -un` != "ec2-user" ]; then
    echo "ERROR: Must run as ec2-user"
    exit 1
fi

#
# Parse command line args
#
while getopts "z:" opt; do
    case $opt in
        z) 
            zk_list=$OPTARG;;
        \?) 
            echo "Invalid option: -$OPTARG"; usage;;
    esac
done

if [ -z "$zk_list" ]; then
    usage
fi

#
# Variables
#
work_dir="/tmp/work"
helpers_dir="$work_dir/ec2oop/helpers"

#
# Source helpers
#
source $helpers_dir/scripts/usersAndGroups.sh
source $helpers_dir/scripts/directories.sh

#
# Main
#
echo -e "\nStarting $SCRIPT_NAME at `date`"

count=1
for zk in $zk_list; do
    echo -e "\n#####  Initializing myid file for $zk"
    if [ ! -f $ZOOKEEPER_DATA_DIR/myid ]; then
        echo $count | sudo -u zookeeper tee $ZOOKEEPER_DATA_DIR/myid || exit 1
    else
        echo "Skipping myid creation, $ZOOKEEPER_DATA_DIR/myid already exists"
    fi
done
echo "SUCCESS"


# start the zk ensemble
for zk in $zk_list; do
    echo -e "\n#####  Starting the zookeeper node $zk"
    if ! ec2-ssh $zk "ps -ef | grep -v grep | grep -q proc_zookeeper"; then
        ec2-ssh $jhs "sudo -u zookeeper ZOOCFGDIR=/etc/zookeeper/conf source /etc/zookeeper/conf/zookeeper-env.sh; /usr/lib/zookeeper/bin/zkServer.sh start >> /var/log/zookeeper/zoo.out 2>&1" || exit 1
    else
        echo -e "\n#####  Skipping start, zookeeper node $zk already running"
    fi
done
echo "SUCCESS"

echo -e "\nFinished $SCRIPT_NAME at `date`"
exit 0
