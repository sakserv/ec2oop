#!/bin/bash
###################################################
#
#  Name: init_mapred
#  Purpose: Initial mapreduce setup
#  Author: Shane Kumpf
#
###################################################

#
# Base variables
#
SCRIPT_NAME=`basename $0`
SCRIPT_DIR=`cd $(dirname $0) && pwd`

#
# Functions
#
function usage
{
    echo "Usage: $SCRIPT_NAME -n <jobhistoryserver>"
    exit 1
}

#
# Validation
#
if [ `id -un` != "ec2-user" ]; then
    echo "ERROR: Must run as ec2-user"
    exit 1
fi

#
# Parse command line args
#
while getopts "n:" opt; do
    case $opt in
        n) 
            jhs=$OPTARG;;
        \?) 
            echo "Invalid option: -$OPTARG"; usage;;
    esac
done

if [ -z "$jhs" ]; then
    usage
fi

#
# Variables
#
work_dir="/tmp/work"
git_ec2oop_url="https://github.com/sakserv/ec2oop.git"
git_ec2_tools_url=" https://github.com/sakserv/ec2-tools"
helpers_dir="$work_dir/ec2oop/helpers"

#
# Prep work dir
#
if [ -d "$work_dir" ]; then
    echo -e "\n#####  Cleaning up previous work directory $work_dir"
    rm -rf $work_dir || exit 1
    echo "SUCCESS"
fi

# Create new work dir
if [ ! -d "$work_dir" ]; then
    echo -e "\n#####  Creating work directory $work_dir"
    mkdir -p $work_dir || exit 1
    echo "SUCCESS"
fi

# git clone ec2-tools into work dir
echo -e "\n#####  Cloning ec2-tools repo"
(cd $work_dir && git clone $git_ec2_tools_url) || exit 1
echo "SUCCESS"

# git clone ec2oop into work dir
echo -e "\n#####  Pulling repo $git_ec2oop_url to $work_dir"
(cd $work_dir && git clone $git_ec2oop_url) || exit 1
echo "SUCCESS"


#
# Source helpers
#
source $helpers_dir/scripts/usersAndGroups.sh
source $helpers_dir/scripts/directories.sh

#
# Main
#
echo -e "\nStarting $SCRIPT_NAME at `date`"

# Create the hdfs /tmp dir and change perms
echo -e "\n#####  Creating the job history server history directory"
sudo -u hdfs hdfs dfs -mkdir -p /mr-history/tmp || exit 1
sudo -u hdfs hdfs dfs -chmod 1777 /mr-history/tmp || exit 1
sudo -u hdfs hdfs dfs -mkdir -p /mr-history/done || exit 1
sudo -u hdfs hdfs dfs -chmod 1777 /mr-history/done || exit 1
sudo -u hdfs hdfs dfs -chown -R mapred:hadoop /mr-history || exit 1
echo "SUCCESS"

# start the JHS
echo -e "\n#####  Starting the jobhistoryserver $jhs"
if ! ec2-ssh $jhs "ps -ef | grep -v grep | grep -q proc_jobhistory"; then
    ec2-ssh $jhs "sudo -u mapred HADOOP_LIBEXEC_DIR=/usr/lib/hadoop/libexec/ /usr/lib/hadoop-mapreduce/sbin/mr-jobhistory-daemon.sh --config $HADOOP_CONF_DIR start historyserver" || exit 1
else
    echo -e "\n#####  Skipping start, jobhistoryserver $jhs already running"
fi
echo "SUCCESS"

echo -e "\nFinished $SCRIPT_NAME at `date`"
exit 0
