#!/bin/bash
###################################################
#
#  Name: init_webhcat
#  Purpose: Initial webhcat setup
#  Author: Shane Kumpf
#
###################################################

#
# Base variables
#
SCRIPT_NAME=`basename $0`
SCRIPT_DIR=`cd $(dirname $0) && pwd`

#
# Functions
#
function usage
{
    echo "Usage: $SCRIPT_NAME -w <webhcat node>"
    exit 1
}

#
# Validation
#
if [ `id -un` != "ec2-user" ]; then
    echo "ERROR: Must run as ec2-user"
    exit 1
fi

#
# Parse command line args
#
while getopts "w:" opt; do
    case $opt in
        w) 
            webhcat=$OPTARG;;
        \?) 
            echo "Invalid option: -$OPTARG"; usage;;
    esac
done

if [ -z "$webhcat" ]; then
    usage
fi

#
# Variables
#
work_dir="/tmp/work"
git_ec2oop_url="https://github.com/sakserv/ec2oop.git"
git_ec2_tools_url=" https://github.com/sakserv/ec2-tools"
helpers_dir="$work_dir/ec2oop/helpers"

#
# Prep work dir
#
node=$webhcat
echo -e "\n#####  Setting up $work_dir on $node"
if ec2-ssh $node "test -d $work_dir";  then
    echo -e "\n#####  Cleaning up previous work directory $work_dir"
    ec2-ssh $node "rm -rf $work_dir" || exit 1
    echo "SUCCESS"
fi

# Create new work dir
if ! ec2-ssh $node "test -d $work_dir";  then
    echo -e "\n#####  Creating work directory $work_dir"
    ec2-ssh $node "mkdir -p $work_dir" || exit 1
    echo "SUCCESS"
fi

# git clone ec2-tools into work dir
echo -e "\n#####  Cloning ec2-tools repo"
ec2-ssh $node "(cd $work_dir && git clone $git_ec2_tools_url)" || exit 1
echo "SUCCESS"

# git clone ec2oop into work dir
echo -e "\n#####  Pulling repo $git_ec2oop_url to $work_dir"
ec2-ssh $node "(cd $work_dir && git clone $git_ec2oop_url)" || exit 1
echo "SUCCESS"


#
# Source helpers
#
source $helpers_dir/scripts/usersAndGroups.sh
source $helpers_dir/scripts/directories.sh

#
# Main
#
echo -e "\nStarting $SCRIPT_NAME at `date`"

# Copy the tez libs into hdfs
echo -e "\n#####  Creating the webhcat apps dir and copying hive and pig libs"
set -x
sudo -u hdfs hdfs dfs -mkdir -p /apps/webhcat || exit 1
sudo -u hdfs hdfs dfs -copyFromLocal /usr/share/HDP-webhcat/* /apps/webhcat/
sudo -u hdfs hdfs dfs -chown -R hive:hadoop /apps/webhcat || exit 1
sudo -u hdfs hdfs dfs -chmod 755 /apps/webhcat || exit 1
set +x
echo "SUCCESS"

# start webhcat
echo -e "\n#####  Starting webhcat on $webhcat"
if ! ec2-ssh $webhcat "ps -ef | grep -v grep | grep -qi secondarynamenode"; then
    ec2-ssh $webhcat "sudo -u hive /usr/lib/hive-hcatalog/sbin/webhcat_server.sh --config $WEBHCAT_CONF_DIR start" || exit 1
else
    echo -e "Skipping start, webhcat already running on $webhcat"
fi
echo "SUCCESS"


echo -e "\nFinished $SCRIPT_NAME at `date`"
exit 0
